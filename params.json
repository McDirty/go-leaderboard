{"name":"Go-leaderboard","tagline":"A leaderboard library written in Go using redis ","body":"Leaderboard\r\n===========\r\n\r\nA leaderboard written in [Go](http://golang.org/) using [Redis](http://redis.io/) database.\r\n\r\nFeatures\r\n--------\r\n\r\n* Create multiple Leaderboards by name \r\n* You can rank a member with and the leaderboard will be updated automatically\r\n* Remove a member from a specific Leaderboard\r\n* Get total of users in a specific Leaderboard and also how many pages it has.\r\n* Get leaders on any page\r\n* Get an \"Around Me\" leaderboard for a member\r\n* Get rank and score for an arbitrary list of members (e.g. friends)\t\r\n\r\nHow to use\r\n----------\r\n\r\nCreate a new leaderboard or attach to an existing leaderboard named 'highscores': \r\n    highScore := NewLeaderboard(\"highscores\", 10)\r\n    //return a Leaderboard: Leaderboard{name:\"highscores\", pageSize:10}\r\n\r\nAdding members to highscores using RankMember(username, score):\r\n<pre>\r\n    highScore.RankMember(\"dayvson\", 9876)\r\n    highScore.RankMember(\"arthur\", 2000123)\r\n    highScore.RankMember(\"felipe\", 100000)\r\n</pre>\r\n\r\nYou can call RankMember with the same member and the leaderboard will be updated automatically:\r\n<pre>\r\n\thighScore.RankMember(\"dayvson\", 7481523)\r\n\t//return an user: User{name:\"dayvson\", score:7481523, rank:1}\r\n</pre>\r\n\r\nGetting a total members on highscores:\r\n<pre>\r\n\thighScore.TotalMembers()\r\n\t//return an int: 3\r\n</pre>\r\n\r\nGetting the rank from a member:\r\n<pre>\r\n\thighScore.GetRank(\"dayvson\")\r\n\t//return an int: 1\r\n</pre>\r\n\r\nGetting a member from a rank position:\r\n<pre>\r\n\thighScore.GetMemberByRank(2)\r\n\t//return an user: User{name:\"felipe\", score:100000, rank:2}\r\n</pre>\r\n\r\nGetting members around you:\r\n<pre>\r\n\thighScore.GetAroundMe(\"felipe\")\r\n\t//return an array of users around you [pageSize]User:\r\n</pre>\r\n\r\nGetting Leaders by page:\r\n<pre>\r\n\thighScore.GetLeaders(1)\r\n\t//return an array of users with highest score in a first page (you can specify any page): [pageSize]User\r\n</pre>\r\n\r\nInstallation\r\n------------\r\n\r\nInstall Leaderboard using the \"go get\" command:\r\n\r\n    go get github.com/dayvson/go-leaderboard\r\n\r\n\r\nTesting\r\n-------\r\n    make test\r\n\r\nDependencies\r\n------------\r\n* Go language distribution\r\n* redigo (github.com/garyburd/redigo/redis)\r\n\r\n\r\n\r\nContributing\r\n------------\r\n\r\n* Contributions are welcome.\r\n* Take care to maintain the existing coding style.\r\n* Add unit tests for any new or changed functionality.\r\n* Open a pull request :)\r\n\r\n\r\nLicense\r\n-------\r\nÂ© 2013, Maxwell Dayvson da Silva. Released under the [MIT License](LICENSE).\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}